# Q. Declare a float value and store it in a variable.
# Check the type and print the id of the same.

a = 21.17
print(a,'\n',"Type of a is - ",type(a),'\n',id(a))

Output - 
--------------------------------------------------------
  21.17 
 Type of a is -  <class 'float'> 
 1976194716720
_________________________________________________________________________________________________________________________________________________________________
# Q. Arithmetic Operations on float
# Take two different float values.
# Store them in two different variables.
# # Do below operations on them:-
# Find sum of both numbers
# Find difference between them
# Find the product of both numbers.
# Find value after dividing first num with second number
# Find the remainder after dividing first number with second number
# Find the quotient after dividing first number with second number
# Find the result of the first num to the power of the second number.

f1 = 21.17
f2 = 17.21
sum1 = f1+f2
dif1 = f1-f2
mul1 = f1*f2
div1 = f1/f2
mod1 = f1%f2
quo1 = f1//f2
pow1 = pow(f1,f2)
print("Sum = ",sum1,'\n',"Difference = ",dif1,'\n',"Multiplication = ",mul1,'\n',"Division = ",div1,'\n',"Remainder = ",mod1)
print("Quotient =",quo1,'\n',"Power = ",pow1)

Output
-------------------------------------------------------------------------------------------------------------------------------
 Sum =  38.38 
 Difference =  3.960000000000001 
 Multiplication =  364.33570000000003 
 Division =  1.2300987797791982 
 Remainder =  3.960000000000001
 Quotient = 1.0 
 Power =  6.541177986484537e+22
 _________________________________________________________________________________________________________________________________________________________________
 # Q. Comparison Operators on float
# Take two different float values.
# Store them in two different variables.
# Do below operations on them:-
# Compare these two numbers with below operator:-
# Greater than, '>'
# Smaller than, '<'
# Greater than or equal to, '>='
# Less than or equal to, '<='
# Observe their output(return type should be boolean)

f1= 21.17
f2= 17.21

print(f1>f2)
print(f1<f2)
print(f1>=f2)
print(f1<=f2)

Output
-------------------------------------------------------
True
False
True
False
_________________________________________________________________________________________________________________________________________________________________
# Q. Equality Operator
# Take two different float values.
# Store them in two different variables.
# Equate them using equality operators (==, !=)
# Observe the output(return type should be boolean)

print(f1 == f2)
print(f1!=f2)

Output
--------------------------------------------------------
False
True
_________________________________________________________________________________________________________________________________________________________________
 
 # Q. Logical operators
# Observe the output of below code
# Cross check the output manually

print(10.20 and 20.30) #both are true and second value taken
# It is logical operator 'and', here, first element will be checked if it is non-zero, if true, it will go and check the second element, 
# which again is true(non-zero). Hence, the output will be 20.30.
#  >Output is 20.3


print(0.0 and 20.30) #First is false so first value
# First element, 0.0 !=0 , is false. Hence, output will be thrown as 0.0 as it will not go ahead. 
# taken->Output is 0.0

print(20.30 and 0.0) #Goes to till second and second value is  false so second is taken>
# 20.30 != 0 which is true. so it goes to the next element,which is 00 != 0, false. SO False will be returned which means
# the output will be 0.0.
# Output is 0.0

print(0.0 and 0.0) #First is false so first value is taken->
# 0.0 != 0 False, so it will not go the the second element and will throw the output as 0.0
# Output is 0.0

print(10.20 or 20.30) #First is True so first value is taken>
# Logical OR operator means, either this or that, which ever is true.
# So, 10.20 != 0, is true, it will not go further and will output the value of 10.20. 
# Output is 10.2

print(0.0 or 20.30) #Goes to till second and second is true second value is taken->
# Here, 0.0 != 0 is false, but the logical operator is OR, hence, it will go further and check the second element. 
# 20.30!=0, which is true and hence it will output the value 20.30.
# Output is 20.3

print(20.30 or 0.0) #First is True so first value is taken->
# Here, 20.30!=0, which is true and h=it will not go further and it will give an output of 20.30. 
# Output is 20.30

print(0.0 or 0.0) #Goes to till second and second is also false and second value is taken>
# 0.0 !=0 ::False. It goes to check the second element, which is 0.0 !=0.0 :: Again false. Hence, output will be 0.0
# Output is 0.0

print(not 10.20) #-Not of true is false->
# 10.20 !=0 which is true. But we have to negate it, hence output will be False 
# Output is False

print(not 0.0) #Not of false is True>
# Here, 0.0!=0, which is false, but then we negate it, output will be True. 
# Output is True
 _________________________________________________________________________________________________________________________________________________________________
# Q. What is the output of expression inside print statement. Cross check before running the program.

a = 10.20
b = 10.20

print(a is b) #True or False? True 10.20<256
print(a is not b) #True or False? False


# Why the Id of float values are different when the same value is assigned to two different variables?
# ex: a = 10.5 b=10.5. but id will be same if I assign the variable
# having float i.e. a=c then both a and c's Id are same

f1 = 10.5 #The variable holds different addresses for floating numbers. 
f2 = 10.5
f4 = f3 = 10.5  #This is called Aliasing which means that two varibales will point to the same address which has that value.
                # Like here, f3 and f4 are two varibales which are pointing to the same address which has 10.5. Hence same address. 

print(id(f1),'\n',id(f2),'\n',id(f3),'\n',id(f4))

Output
------------------------------------------------------------------------
False
True
2070247531440 
 2070247531856 
 2070247531952 
 2070247531952
 
_________________________________________________________________________________________________________________________________________________________________

# Q. Bitwise operation is NOT applicable between instances of float.

print(1.20 & 2.2)
# It is not supported. FLoat has three parts, sign, exponent bits and mantissa. Now, these are stored differently than an integer
# and no Bitwise function can be used 
#OUTPUT - FALSE

# Why the Id of float values are different when the same value is assigned to two different variables
# ex: a = 10.5 b=10.5. but id will be same if I assign the variable
# having float i.e. a=c then both a and c's Id are same
# Object reusability concept is not applicable on float values.


f1 = 10.5 #The variable holds different addresses for floating numbers. 
f2 = 10.5
f4 = f3 = 10.5  #This is called Aliasing which means that two varibales will point to the same address which has that value.
                # Like here, f3 and f4 are two varibales which are pointing to the same address which has 10.5. Hence same address. 

print(id(f1),'\n',id(f2),'\n',id(f3),'\n',id(f4))

_________________________________________________________________________________________________________________________________________________________________

# Q. Membership operation
# in, not in are two membership operators and it returns boolean value

print('2.7' in 'Python2.7.8') #True

print(10.20 in [10,10.20,10+20j,'Python']) #True

print(10.20 in (10,10.20,10+20j,'Python')) # True

print(20.30 in {1,20.30,30+40j}) # True

print(2.3 in {1:100, 2.3:200, 30+40j:300}) # True

print(10 in range(20))

Output
-----------------------------------------------------------------------------
True
True
True
True
True
True
